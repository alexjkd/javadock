version: '3'

networks:
    frontend:
        driver: ${NETWORKS_DRIVER}
    backend:
        driver: ${NETWORKS_DRIVER}

volumes:
    mysql:
        driver: ${VOLUMES_DRIVER}
    tomcat:
        driver: ${VOLUMES_DRIVER}
    jetty:
        driver: ${VOLUMES_DRIVER}
    redis:
        driver: ${VOLUMES_DRIVER}

services:

### Workspace Utilities ##################################

### MySQL ################################################
    mysql:
        build:
            context: ./mysql
            args:
                - MYSQL_VERSION=${MYSQL_VERSION}
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - TZ=${WORKSPACE_TIMEZONE}
        volumes:
            - ${MYSQL_HOST_LOG_PATH}:/var/log/mysql
            - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
            - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        ports:
            - "${MYSQL_PORT}:3306"
        networks:
            - backend

 ### TomCat  ################################################
    tomcat:
        build:
            context: ./tomcat
            args:
                - TOMCAT_VERSION=${TOMCAT_VERSION}
        environment:
            - CATALINA_BASE=/usr/local/tomcat
            - TZ=${WORKSPACE_TIMEZONE}
        volumes:
            - ${TOMCAT_HOST_LOG_PATH}:/usr/local/tomcat/logs
           #- ${APP_CODE_PATH_CONTAINER}:/usr/local/tomcat/webapps/spring
           #- ./tomcat/conf_webapps:/usr/local/tomcat/webapps
            - ./webapps:/usr/local/tomcat/webapps_2
            - ./tomcat/lib:/usr/local/tomcat/lib
            - ./tomcat/conf:/usr/local/tomcat/conf 
        ports:
            - "${TOMCAT_PORT}:8080"
            - "${TOMCAT_MANAGE_PORT}:8081"
            - "${TOMCAT_DEBUGGING_PORT}:8000" 
        networks:
            - backend

 ### Jetty  ################################################
 
    jetty:
        build:
            context: ./jetty
            args:
                - JETTY_VERSION=${JETTY_VERSION}
        environment:
            - TZ=${WORKSPACE_TIMEZONE}
        volumes:
            - ./webapps:/var/lib/jetty/webapps
        ports:
            - "${JETTY_PORT}:8080"
            - "${JETTY_DEBUGGING_PORT}:8000" 
        networks:
            - backend

### Redis ################################################
    redis:
      build: ./redis
      volumes:
        - ${DATA_PATH_HOST}/redis:/data
      ports:
        - "${REDIS_PORT}:6379"
      networks:
        - backend

### Redis Cluster ##########################################
    redis-cluster:
      build: ./redis-cluster
      ports:
        - "${REDIS_CLUSTER_PORT_RANGE}:7000-7005"
      networks:
        - backend


### REDISWEBUI ################################################
    redis-webui:
      build:
        context: ./redis-webui
      environment:
        - ADMIN_USER=${REDIS_WEBUI_USERNAME}
        - ADMIN_PASS=${REDIS_WEBUI_PASSWORD}
        - REDIS_1_HOST=${REDIS_WEBUI_CONNECT_HOST}
        - REDIS_1_PORT=${REDIS_WEBUI_CONNECT_PORT}
      networks:
        - backend
      ports:
        - "${REDIS_WEBUI_PORT}:80"
      depends_on:
        - redis

### Jenkins ###################################################
    jenkins:
      build: ./jenkins
      environment:
        JAVA_OPTS: "-Djava.awt.headless=true -Duser.timezone=\"Asia/Shanghai\""
      ports:
        - "${JENKINS_HOST_SLAVE_AGENT_PORT}:50000"
        - "${JENKINS_HOST_HTTP_PORT}:8080"
      privileged: true
      volumes:
        - ${JENKINS_HOME}:/var/jenkins_home
        - /var/run/docker.sock:/var/run/docker.sock
      networks:
        - frontend
        - backend

### ZooKeeper #########################################
    zookeeper:
      build: ./zookeeper
      volumes:
        - ${DATA_PATH_HOST}/zookeeper/data:/data
        - ${DATA_PATH_HOST}/zookeeper/datalog:/datalog
      ports:
        - "${ZOOKEEPER_PORT}:2181"
      networks:
        - backend

